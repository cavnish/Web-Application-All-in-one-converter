{"version":3,"mappings":"sKAMA,MAAMA,EAAUC,EAAiB,UAAW,CAC1C,CAAC,WAAY,CAAE,OAAQ,oBAAqB,IAAK,QAAQ,CAAE,EAC3D,CACE,OACA,CACE,EAAG,6EACH,IAAK,QACN,CACF,EACD,CAAC,OAAQ,CAAE,MAAO,KAAM,OAAQ,IAAK,EAAG,IAAK,EAAG,KAAM,IAAK,QAAQ,CAAE,CACvE,CAAC,ECPYC,EAA6B,IAAM,CAC9C,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAAS,CAE7C,YAAa,oBACb,eAAgB;AAAA,0BAChB,aAAc,iBACd,aAAc,sBACd,WAAY,kBAGZ,cAAe,eACf,gBAAiB,OAAO,YAAc,QAAM,GAAG,EAAE,CAAC,EAClD,cAAe,OAAO,YAAc,QAAM,GAAG,EAAE,CAAC,EAChD,aAAc,cACd,aAAc,WACd,cAAe,UAGf,UAAW,4BACX,aAAc;AAAA,0BACd,SAAU,kBACV,cAAe,4BACf,iBAAkB;AAAA,0BAClB,aAAc,kBACd,YAAa,GAGb,SAAU,EACV,SAAU,EAGV,MAAO,CACL,CACE,YAAa,wCACb,IAAK,OACL,SAAU,GACV,KAAM,IACR,EACA,CACE,YAAa,mDACb,IAAK,OACL,SAAU,EACV,KAAM,IACR,EACA,CACE,YAAa,uCACb,IAAK,OACL,SAAU,EACV,KAAM,GACR,CACF,EACD,EAEK,CAACC,EAAMC,CAAO,EAAIF,WAAwB,IAAI,EAC9C,CAACG,EAAWC,CAAY,EAAIJ,WAAwB,IAAI,EACxD,CAACK,EAAUC,CAAW,EAAIN,WAAS,EAAE,EACrC,CAACO,EAAcC,CAAe,EAAIR,WAAS,EAAE,EAC7CS,EAAaC,SAAuB,IAAI,EAExCC,EAAoBC,GAAoB,CAC5CJ,EAAgBI,CAAO,EACvB,WAAW,IAAMJ,EAAgB,EAAE,EAAG,GAAI,GAGtCK,EAAoB,CAACC,EAAeC,IAAe,CACvDhB,EAAwBiB,IAAA,CACtB,GAAGA,EACH,CAACF,CAAK,EAAGC,CACT,KAGEE,EAAmB,CAACC,EAAeJ,EAAeC,IAAe,CACrE,MAAMI,EAAe,CAAC,GAAGrB,EAAY,KAAK,EAC1CqB,EAAaD,CAAK,EAAI,CACpB,GAAGC,EAAaD,CAAK,EACrB,CAACJ,CAAK,EAAGA,IAAU,YAAcA,IAAU,OAAS,WAAWC,CAAK,GAAK,EAAIA,CAAA,EAE/EhB,MAAwB,CAAE,GAAGiB,EAAM,MAAOG,CAAe,KAGrDC,EAAU,IAAM,CACpBrB,EAAwBiB,IAAA,CACtB,GAAGA,EACH,MAAO,CACL,GAAGA,EAAK,MACR,CAAE,YAAa,WAAY,IAAK,OAAQ,SAAU,EAAG,KAAM,CAAE,CAC/D,CACA,KAGEK,EAAcH,GAAkB,CAC9B,MAAAC,EAAerB,EAAY,MAAM,OAAO,CAACwB,EAAGC,IAAMA,IAAML,CAAK,EACnEnB,MAAwB,CAAE,GAAGiB,EAAM,MAAOG,CAAe,KAGrDK,EAAoBC,GAA+C,OACvE,MAAMC,GAAOC,EAAAF,EAAM,OAAO,QAAb,YAAAE,EAAqB,GAClC,GAAID,EAAM,CACF,MAAAE,EAAS,IAAI,WACZA,EAAA,OAAUC,GAAM,OACb3B,GAAAyB,EAAAE,EAAE,SAAF,YAAAF,EAAU,MAAgB,GAEpCC,EAAO,cAAcF,CAAI,CAC3B,GAGII,EAAyBL,GAA+C,OAC5E,MAAMC,GAAOC,EAAAF,EAAM,OAAO,QAAb,YAAAE,EAAqB,GAClC,GAAID,EAAM,CACF,MAAAE,EAAS,IAAI,WACZA,EAAA,OAAUC,GAAM,OACRzB,GAAAuB,EAAAE,EAAE,SAAF,YAAAF,EAAU,MAAgB,GAEzCC,EAAO,cAAcF,CAAI,CAC3B,GAGIK,EAAkB,IAAM,CAC5B,MAAMC,EAAWlC,EAAY,MAAM,OAAO,CAACmC,EAAKC,IAASD,EAAOC,EAAK,SAAWA,EAAK,KAAO,CAAC,EACvFC,EAAcH,EAAWlC,EAAY,SAAY,IACjDsC,EAAcJ,EAAWlC,EAAY,SAAY,IACjDuC,EAAcL,EAAWG,EAAaC,EAErC,OAAE,SAAAJ,EAAU,WAAAG,EAAY,WAAAC,EAAY,YAAAC,EAAY,EAGnDC,EAAgBC,GACbA,EAAI,QAAQ,CAAC,EAAE,QAAQ,oBAAqB,KAAK,EAGpDC,EAAcC,GACL,IAAI,KAAKA,CAAU,EACpB,mBAAmB,QAAS,CACtC,IAAK,UAAW,MAAO,QAAS,KAAM,UACvC,EAGGC,EAAiBH,GAGd,UAAUD,EAAaC,CAAG,CAAC,QAG9BI,EAAc,SAAY,CAC9B,GAAKlC,EAAW,QAEhB,CAAAE,EAAiB,mBAAmB,EAEhC,IACF,MAAMiC,GAAY,MAAMC,EAAA,WAAO,wBAAa,eAAG,iGAEzCC,EAAM,CACV,OAAQ,EACR,SAAU,WAAWhD,EAAY,aAAa,OAC9C,MAAO,CAAE,KAAM,OAAQ,QAAS,CAAE,EAClC,YAAa,CACX,MAAO,EACP,QAAS,GACT,QAAS,EACX,EACA,MAAO,CACL,KAAM,KACN,OAAQ,KACR,YAAa,UACf,GAGO8C,EAAA,EAAE,IAAIE,CAAG,EAAE,KAAKrC,EAAW,OAAO,EAAE,OAC7CE,EAAiB,8BAA8B,QACxCoC,EAAO,CACN,cAAM,yBAA0BA,CAAK,EAC7CpC,EAAiB,sBAAsB,CACzC,IAGI,CAAE,SAAAqB,EAAU,WAAAG,EAAY,WAAAC,EAAY,YAAAC,CAAA,EAAgBN,IAGxD,OAAAiB,EAAA,KAACC,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,oBAEV,UAACD,OAAA,OAAI,UAAU,yCAEb,UAACE,MAAA,OAAI,UAAU,mBACb,SAAAF,EAAA,KAACC,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,MAAO,EAAI,EAClC,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,UAAU,kDAEV,UAAAC,MAAC,OAAI,UAAU,+EACb,eAACC,EAAS,WAAU,qBAAqB,CAC3C,GACAH,OAAC,MAAI,WAAU,YACb,UAACE,EAAA,UAAG,UAAU,mDAAmD,SAEjE,mCACCA,EAAA,SAAE,UAAU,gDAAgD,SAE7D,mEACF,KAEJ,EAEAF,OAAC,MAAI,WAAU,4BAEb,UAAAE,MAAC,OAAI,UAAU,0BACb,SAACF,EAAA,YAAI,UAAU,wFACb,UAACA,OAAA,MAAG,UAAU,qEACZ,UAACE,MAAAE,EAAA,CAAS,UAAU,cAAe,GAAE,mBAEvC,EAEAJ,OAAC,MAAI,WAAU,wCACb,UAAAA,OAAC,MACC,WAACE,EAAA,aAAM,UAAU,kEAAkE,SAEnF,mBACAA,EAAA,IAAC,SACC,KAAK,OACL,MAAOpD,EAAY,cACnB,SAAW+B,GAAMhB,EAAkB,gBAAiBgB,EAAE,OAAO,KAAK,EAClE,UAAU,4HACZ,GACF,SAEC,MACC,WAACqB,EAAA,aAAM,UAAU,kEAAkE,SAEnF,iBACAA,EAAA,IAAC,SACC,KAAK,OACL,MAAOpD,EAAY,YACnB,SAAW+B,GAAMhB,EAAkB,cAAegB,EAAE,OAAO,KAAK,EAChE,UAAU,4HACZ,GACF,GACF,EAGCqB,EAAA,UAAG,UAAU,wDAAwD,SAAmB,wBAEzFF,OAAC,MAAI,WAAU,wCACb,UAACA,OAAA,OAAI,UAAU,gBACb,UAACE,EAAA,aAAM,UAAU,kEAAkE,SAEnF,iBACAA,EAAA,IAAC,SACC,KAAK,OACL,MAAOpD,EAAY,YACnB,SAAW+B,GAAMhB,EAAkB,cAAegB,EAAE,OAAO,KAAK,EAChE,UAAU,4HACZ,GACF,EAEAmB,OAAC,MAAI,WAAU,gBACb,UAACE,EAAA,aAAM,UAAU,kEAAkE,SAEnF,oBACAA,EAAA,IAAC,YACC,MAAOpD,EAAY,eACnB,SAAW+B,GAAMhB,EAAkB,iBAAkBgB,EAAE,OAAO,KAAK,EACnE,KAAM,EACN,UAAU,4HACZ,GACF,SAEC,MACC,WAACqB,EAAA,aAAM,UAAU,kEAAkE,SAEnF,gBACAF,OAAC,MAAI,WAAU,gJACb,UAACE,MAAAG,EAAA,CAAO,UAAU,oCAAqC,GACtDH,EAAA,YAAK,UAAU,2CAA2C,SAAoB,yBAC/EA,EAAA,IAAC,SACC,KAAK,OACL,OAAO,UACP,SAAU1B,EACV,UAAU,SACV,GAAG,cACL,GACF,GACF,SAEC,MACC,WAAC0B,EAAA,aAAM,UAAU,kEAAkE,SAEnF,qBACAF,OAAC,MAAI,WAAU,gJACb,UAACE,MAAAG,EAAA,CAAO,UAAU,oCAAqC,GACtDH,EAAA,YAAK,UAAU,2CAA2C,SAAyB,8BACpFA,EAAA,IAAC,SACC,KAAK,OACL,OAAO,UACP,SAAUpB,EACV,UAAU,SACV,GAAG,mBACL,GACF,GACF,GACF,EAGCoB,EAAA,UAAG,UAAU,wDAAwD,SAAgB,qBAErFA,EAAA,WAAI,UAAU,YACZ,SAAYpD,EAAA,MAAM,IAAI,CAACoC,EAAMhB,IAC3B8B,OAAA,OAAgB,UAAU,kGACzB,UAACE,MAAA,OAAI,UAAU,aACb,SAAAA,EAAA,IAAC,SACC,KAAK,OACL,MAAOhB,EAAK,YACZ,SAAWL,GAAMZ,EAAiBC,EAAO,cAAeW,EAAE,OAAO,KAAK,EACtE,YAAY,mBACZ,UAAU,sIAEd,EACAqB,MAAC,MAAI,WAAU,aACb,SAAAA,EAAA,IAAC,SACC,KAAK,OACL,MAAOhB,EAAK,IACZ,SAAWL,GAAMZ,EAAiBC,EAAO,MAAOW,EAAE,OAAO,KAAK,EAC9D,YAAY,MACZ,UAAU,sIAEd,EACAqB,MAAC,MAAI,WAAU,aACb,SAAAA,EAAA,IAAC,SACC,KAAK,SACL,MAAOhB,EAAK,SACZ,SAAWL,GAAMZ,EAAiBC,EAAO,WAAYW,EAAE,OAAO,KAAK,EACnE,UAAU,sIAEd,EACAqB,MAAC,MAAI,WAAU,aACb,SAAAA,EAAA,IAAC,SACC,KAAK,SACL,MAAOhB,EAAK,KACZ,SAAWL,GAAMZ,EAAiBC,EAAO,OAAQW,EAAE,OAAO,KAAK,EAC/D,UAAU,sIAEd,EACAqB,MAAC,MAAI,WAAU,aACb,SAAAA,EAAA,IAAC,UACC,QAAS,IAAM7B,EAAWH,CAAK,EAC/B,UAAU,yFACX,eAGH,IA1CQA,CA2CV,CACD,EACH,EAEAgC,EAAA,IAAC,UACC,QAAS9B,EACT,UAAU,uFACX,oBAED,EAGA4B,OAAC,MAAI,WAAU,kBACb,UAAAA,EAAA,KAAC,UACC,QAASL,EACT,UAAU,kIAEV,UAACO,MAAAI,EAAA,CAAS,UAAU,SAAU,GAAE,gBAElC,EACAN,EAAA,KAAC,UACC,QAAS,IAAM,OAAO,MAAM,EAC5B,UAAU,gIAEV,UAACE,MAAAvD,EAAA,CAAQ,UAAU,SAAU,GAAE,SAEjC,GACF,GACF,CACF,GAGAqD,OAAC,MAAI,WAAU,YACb,UAACA,OAAA,OAAI,UAAU,wFACb,UAACE,EAAA,UAAG,UAAU,mDAAmD,SAAkB,uBAEnFA,MAAC,MAAI,WAAU,+CACb,SAAAF,EAAA,KAAC,OACC,IAAKvC,EACL,UAAU,oCACV,MAAO,CAAE,MAAO,QAAS,UAAW,QAAS,OAAQ,QAAS,EAG9D,UAACuC,OAAA,OAAI,UAAU,uFACb,UAACA,OAAA,OAAI,UAAU,eACZ,UACC/C,GAAAiD,EAAA,IAAC,OACC,IAAKjD,EACL,IAAI,eACJ,MAAO,CAAE,UAAW,GAAGI,CAAQ,KAAM,aAAc,KAAM,EAC3D,EAED6C,EAAA,UAAG,UAAU,uCAAwC,WAAY,YAAY,EAC7EA,MAAA,OAAI,UAAU,6BAA6B,wBAAyB,CACnE,OAAQpD,EAAY,eAAe,QAAQ,MAAO,MAAM,GACvD,EACHkD,OAAC,MAAI,WAAU,wBAAwB,oBAAQlD,EAAY,aAAa,aAAWA,EAAY,cAAa,EAC5GkD,OAAC,MAAI,WAAU,wBAAwB,oBAAQlD,EAAY,YAAW,GACxE,EACCoD,EAAA,WAAI,UAAU,iDAAiD,SAAO,aACzE,EAGAF,OAAC,MAAI,WAAU,6CACb,UAACA,OAAA,OAAI,UAAU,2DACb,UAACE,EAAA,UAAG,UAAU,+DAA+D,SAAmB,wBAC/FA,EAAA,WAAI,UAAU,qBAAsB,WAAY,cAAc,EAC9DA,MAAA,OAAI,UAAU,eAAe,wBAAyB,CACrD,OAAQpD,EAAY,iBAAiB,QAAQ,MAAO,MAAM,GACzD,EACHkD,OAAC,MAAI,WAAU,UAAU,oBAAQlD,EAAY,cAAa,GAC5D,EACAkD,OAAC,MAAI,WAAU,2DACb,UAACE,EAAA,UAAG,UAAU,+DAA+D,SAAe,oBAC3FA,EAAA,WAAI,UAAU,qBAAsB,WAAY,UAAU,EAC1DA,MAAA,OAAI,UAAU,eAAe,wBAAyB,CACrD,OAAQpD,EAAY,aAAa,QAAQ,MAAO,MAAM,GACrD,EACHkD,OAAC,MAAI,WAAU,UAAU,oBAAQlD,EAAY,UAAS,GACxD,GACF,EAGAoD,EAAA,IAAC,OAAI,UAAU,oBACb,eAAC,QAAM,WAAU,wDACf,SAAAF,EAAA,KAAC,QACC,WAAAA,OAAC,KACC,WAACE,EAAA,UAAG,UAAU,4DAA4D,SAAW,gBACpFA,EAAA,UAAG,UAAU,mCAAoC,WAAY,cAAc,EAC3EA,EAAA,UAAG,UAAU,4DAA4D,SAAa,kBACtFA,EAAA,UAAG,UAAU,mCAAoC,WAAY,aAAa,GAC7E,SACC,KACC,WAACA,EAAA,UAAG,UAAU,sDAAsD,SAAY,uBAC/E,KAAG,WAAU,6BAA8B,SAAWV,EAAA1C,EAAY,WAAW,EAAE,EAC/EoD,EAAA,UAAG,UAAU,sDAAsD,SAAiB,sBACpFA,EAAA,UAAG,UAAU,6BAA8B,WAAY,aAAa,GACvE,EACF,EACF,GACF,QAGC,MAAI,WAAU,mBACb,SAACF,EAAA,cAAM,UAAU,wDACf,UAAAE,MAAC,QACC,UAAAF,OAAC,KAAG,WAAU,yBACZ,UAACE,EAAA,UAAG,UAAU,uCAAuC,SAAC,MACrDA,EAAA,UAAG,UAAU,uCAAuC,SAAW,gBAC/DA,EAAA,UAAG,UAAU,uCAAuC,SAAO,YAC3DA,EAAA,UAAG,UAAU,uCAAuC,SAAG,QACvDA,EAAA,UAAG,UAAU,uCAAuC,SAAQ,aAC5DA,EAAA,UAAG,UAAU,uCAAuC,SAAU,gBACjE,CACF,GACCA,MAAA,SACE,SAAYpD,EAAA,MAAM,IAAI,CAACoC,EAAMhB,IAC5B8B,EAAA,KAAC,MAAe,UAAW9B,EAAQ,IAAM,EAAI,aAAe,GAC1D,UAAAgC,EAAA,IAAC,KAAG,WAAU,6BAA8B,SAAAhC,EAAQ,EAAE,EACrDgC,EAAA,UAAG,UAAU,6BAA8B,WAAK,YAAY,EAC5DA,EAAA,UAAG,UAAU,6BAA8B,WAAK,IAAI,EACpDA,EAAA,UAAG,UAAU,6BAA8B,WAAK,SAAS,EAC1DF,OAAC,KAAG,WAAU,6BAA6B,eAAGV,EAAaJ,EAAK,IAAI,GAAE,EACtEc,OAAC,KAAG,WAAU,6BAA6B,eAAGV,EAAaJ,EAAK,SAAWA,EAAK,IAAI,GAAE,IAN/EhB,CAOT,CACD,EACH,GACF,CACF,GAGAgC,EAAA,IAAC,OAAI,UAAU,sBACb,eAAC,QAAM,WAAU,+DACf,SAAAF,EAAA,KAAC,QACC,WAAAA,OAAC,KACC,WAACE,EAAA,UAAG,UAAU,sDAAsD,SAAS,cAC7EF,OAAC,KAAG,WAAU,6BAA6B,eAAGV,EAAaN,CAAQ,GAAE,GACvE,SACC,KACC,WAACgB,OAAA,MAAG,UAAU,sDAAsD,oBAAQlD,EAAY,SAAS,MAAE,EACnGkD,OAAC,KAAG,WAAU,6BAA6B,eAAGV,EAAaH,CAAU,GAAE,GACzE,SACC,KACC,WAACa,OAAA,MAAG,UAAU,sDAAsD,oBAAQlD,EAAY,SAAS,MAAE,EACnGkD,OAAC,KAAG,WAAU,6BAA6B,eAAGV,EAAaF,CAAU,GAAE,GACzE,SACC,KACC,WAACc,EAAA,UAAG,UAAU,kEAAkE,SAAa,kBAC7FF,OAAC,KAAG,WAAU,kEAAkE,eAAGV,EAAaD,CAAW,GAAE,GAC/G,EACF,EACF,GACF,EAGAW,OAAC,MAAI,WAAU,0EACb,UAAAE,MAAC,UAAO,SAAgB,qBAAS,IAAER,EAAcL,CAAW,GAC9D,EAGAW,OAAC,MAAI,WAAU,gFACb,UAACA,OAAA,OAAI,UAAU,0BACb,UAACA,OAAA,KAAE,UAAU,6BACX,UAAAE,MAAC,UAAO,SAAY,iBAAS,8HAC/B,EACAF,OAAC,IAAE,WAAU,+BACX,UAAAE,MAAC,UAAO,SAAK,UAAS,iEACxB,GACF,EACAF,OAAC,MAAI,WAAU,wBACZ,UACC7C,GAAA+C,EAAA,IAAC,OACC,IAAK/C,EACL,IAAI,YACJ,UAAU,eACV,MAAO,CAAE,UAAW,MAAO,EAC7B,EAEF6C,OAAC,IAAE,WAAU,wBAAwB,iBAAKlD,EAAY,aAAY,EAClEoD,MAAC,MAAI,WAAU,iDAAkD,GAChEA,EAAA,SAAE,UAAU,eAAe,SAAoB,0BAClD,GACF,KAEJ,GACF,EAGCjD,GACC+C,EAAA,KAAC,MAAI,WAAU,wFACb,UAACE,EAAA,UAAG,UAAU,mDAAmD,SAAa,kBAC9EF,OAAC,MAAI,WAAU,YACb,UAAAA,OAAC,MACC,WAACA,OAAA,SAAM,UAAU,kEAAkE,wBACrE3C,EAAS,MACvB,EACA6C,EAAA,IAAC,SACC,KAAK,QACL,IAAI,KACJ,IAAI,KACJ,MAAO7C,EACP,SAAWwB,GAAMvB,EAAY,SAASuB,EAAE,OAAO,KAAK,CAAC,EACrD,UAAU,SACZ,GACF,EACAmB,OAAC,MAAI,WAAU,aACb,UAAAE,EAAA,IAAC,UACC,QAAS,IAAM5C,EAAY,EAAE,EAC7B,UAAU,8EACX,iBAED,EACA4C,EAAA,IAAC,UACC,QAAS,IAAM5C,EAAY,EAAE,EAC7B,UAAU,8EACX,kBAED,EACA4C,EAAA,IAAC,UACC,QAAS,IAAM5C,EAAY,EAAE,EAC7B,UAAU,8EACX,iBAED,GACF,EACA4C,EAAA,IAAC,UACC,QAAS,IAAMhD,EAAQ,IAAI,EAC3B,UAAU,uFACX,uBAED,GACF,GACF,GAEJ,GACF,GACF,EAGCK,GACC2C,EAAA,IAAC,MAAI,WAAU,kFACZ,SACH3C,EAAA,IAIR","names":["Printer","createLucideIcon","InvoiceGenerator","invoiceData","setInvoiceData","useState","logo","setLogo","signature","setSignature","logoSize","setLogoSize","notification","setNotification","invoiceRef","useRef","showNotification","message","handleInputChange","field","value","prev","handleItemChange","index","updatedItems","addItem","removeItem","_","i","handleLogoUpload","event","file","_a","reader","e","handleSignatureUpload","calculateTotals","subtotal","sum","item","cgstAmount","sgstAmount","totalAmount","formatNumber","num","formatDate","dateString","numberToWords","downloadPDF","html2pdf","__vitePreload","opt","error","jsxs","motion","jsx","FileText","Settings","Upload","Download"],"sources":["../../node_modules/lucide-react/dist/esm/icons/printer.mjs","../../src/pages/converters/InvoiceGenerator.tsx"],"sourcesContent":["/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Printer = createLucideIcon(\"Printer\", [\n  [\"polyline\", { points: \"6 9 6 2 18 2 18 9\", key: \"1306q4\" }],\n  [\n    \"path\",\n    {\n      d: \"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\",\n      key: \"143wyd\"\n    }\n  ],\n  [\"rect\", { width: \"12\", height: \"8\", x: \"6\", y: \"14\", key: \"5ipwut\" }]\n]);\n\nexport { Printer as default };\n//# sourceMappingURL=printer.mjs.map\n","// src/pages/converters/InvoiceGenerator.tsx\nimport React, { useState, useRef } from 'react';\n// Add type declaration for html2pdf.js\ndeclare module 'html2pdf.js';\nimport { motion } from 'framer-motion';\nimport { FileText, Download, Printer, Settings, Upload } from 'lucide-react';\n\n// @ts-ignore: No type declarations for html2pdf.js\n\nexport const InvoiceGenerator: React.FC = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    // Company Information\n    companyName: 'Aarav Enterprises',\n    companyAddress: '123 Industrial Park, Sector 65\\nGurugram, Haryana 122001',\n    companyPhone: '+91 9021179108',\n    companyEmail: 'cavnish07@gmail.com',\n    companyGST: '06AABCU1234A1Z5',\n    \n    // Invoice Details\n    invoiceNumber: 'INV-2024-001',\n    invoiceDate: new Date().toISOString().split('T')[0],\n    orderDate: new Date().toISOString().split('T')[0],\n    deliveryNote: 'DN-2024-001',\n    buyerOrderNo: 'PO-54321',\n    placeOfSupply: 'Haryana',\n    \n    // Client Information\n    buyerName: 'Global Manufacturing Corp',\n    buyerAddress: '456 Business Avenue, Udyog Vihar\\nGurugram, Haryana 122016',\n    buyerGST: '06BBCCD5678E2F3',\n    consigneeName: 'Global Manufacturing Corp',\n    consigneeAddress: '456 Business Avenue, Udyog Vihar\\nGurugram, Haryana 122016',\n    consigneeGST: '06BBCCD5678E2F3',\n    sameAsBuyer: true,\n    \n    // Tax Information\n    cgstRate: 9,\n    sgstRate: 9,\n    \n    // Items\n    items: [\n      {\n        description: 'Professional Office Workstation Setup',\n        hsn: '9954',\n        quantity: 10,\n        rate: 15000\n      },\n      {\n        description: 'Industrial Warehouse Racking System Installation',\n        hsn: '7308',\n        quantity: 1,\n        rate: 85000\n      },\n      {\n        description: 'Site Survey and Project Consultation',\n        hsn: '9983',\n        quantity: 1,\n        rate: 10000\n      }\n    ]\n  });\n\n  const [logo, setLogo] = useState<string | null>(null);\n  const [signature, setSignature] = useState<string | null>(null);\n  const [logoSize, setLogoSize] = useState(45);\n  const [notification, setNotification] = useState('');\n  const invoiceRef = useRef<HTMLDivElement>(null);\n\n  const showNotification = (message: string) => {\n    setNotification(message);\n    setTimeout(() => setNotification(''), 3000);\n  };\n\n  const handleInputChange = (field: string, value: any) => {\n    setInvoiceData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleItemChange = (index: number, field: string, value: any) => {\n    const updatedItems = [...invoiceData.items];\n    updatedItems[index] = {\n      ...updatedItems[index],\n      [field]: field === 'quantity' || field === 'rate' ? parseFloat(value) || 0 : value\n    };\n    setInvoiceData(prev => ({ ...prev, items: updatedItems }));\n  };\n\n  const addItem = () => {\n    setInvoiceData(prev => ({\n      ...prev,\n      items: [\n        ...prev.items,\n        { description: 'New Item', hsn: '0000', quantity: 1, rate: 0 }\n      ]\n    }));\n  };\n\n  const removeItem = (index: number) => {\n    const updatedItems = invoiceData.items.filter((_, i) => i !== index);\n    setInvoiceData(prev => ({ ...prev, items: updatedItems }));\n  };\n\n  const handleLogoUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setLogo(e.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSignatureUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setSignature(e.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const calculateTotals = () => {\n    const subtotal = invoiceData.items.reduce((sum, item) => sum + (item.quantity * item.rate), 0);\n    const cgstAmount = (subtotal * invoiceData.cgstRate) / 100;\n    const sgstAmount = (subtotal * invoiceData.sgstRate) / 100;\n    const totalAmount = subtotal + cgstAmount + sgstAmount;\n\n    return { subtotal, cgstAmount, sgstAmount, totalAmount };\n  };\n\n  const formatNumber = (num: number) => {\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-GB', {\n      day: '2-digit', month: 'short', year: 'numeric'\n    });\n  };\n\n  const numberToWords = (num: number) => {\n    // Simplified number to words conversion\n    // In a real app, you'd want a more comprehensive solution\n    return `Rupees ${formatNumber(num)} Only`;\n  };\n\n  const downloadPDF = async () => {\n    if (!invoiceRef.current) return;\n\n    showNotification('Generating PDF...');\n\n    try {\n      const html2pdf = (await import('html2pdf.js')).default;\n      \n      const opt = {\n        margin: 0,\n        filename: `Invoice_${invoiceData.invoiceNumber}.pdf`,\n        image: { type: 'jpeg', quality: 1 },\n        html2canvas: { \n          scale: 2,\n          useCORS: true,\n          logging: false\n        },\n        jsPDF: { \n          unit: 'mm', \n          format: 'a4', \n          orientation: 'portrait'\n        }\n      };\n\n      html2pdf().set(opt).from(invoiceRef.current).save();\n      showNotification('PDF downloaded successfully!');\n    } catch (error) {\n      console.error('PDF generation failed:', error);\n      showNotification('Error generating PDF');\n    }\n  };\n\n  const { subtotal, cgstAmount, sgstAmount, totalAmount } = calculateTotals();\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"min-h-screen py-8\"\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"flex items-center justify-center space-x-4 mb-6\"\n          >\n            <div className=\"w-16 h-16 bg-blue-500 rounded-2xl flex items-center justify-center shadow-lg\">\n              <FileText className=\"w-8 h-8 text-white\" />\n            </div>\n            <div className=\"text-left\">\n              <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white\">\n                Professional Invoice Generator\n              </h1>\n              <p className=\"text-xl text-gray-600 dark:text-gray-400 mt-2\">\n                Create professional A4 invoices with perfect fit for printing\n              </p>\n            </div>\n          </motion.div>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Editor Panel */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6\">\n              <h2 className=\"font-semibold text-gray-900 dark:text-white mb-4 flex items-center\">\n                <Settings className=\"w-5 h-5 mr-2\" />\n                Invoice Details\n              </h2>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Invoice Number\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={invoiceData.invoiceNumber}\n                    onChange={(e) => handleInputChange('invoiceNumber', e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Invoice Date\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={invoiceData.invoiceDate}\n                    onChange={(e) => handleInputChange('invoiceDate', e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  />\n                </div>\n              </div>\n\n              {/* Company Information */}\n              <h3 className=\"font-semibold text-gray-900 dark:text-white mt-6 mb-4\">Company Information</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"md:col-span-2\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Company Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={invoiceData.companyName}\n                    onChange={(e) => handleInputChange('companyName', e.target.value)}\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  />\n                </div>\n\n                <div className=\"md:col-span-2\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Company Address\n                  </label>\n                  <textarea\n                    value={invoiceData.companyAddress}\n                    onChange={(e) => handleInputChange('companyAddress', e.target.value)}\n                    rows={3}\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Upload Logo\n                  </label>\n                  <div className=\"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-xl p-4 text-center cursor-pointer hover:border-blue-500 transition-colors\">\n                    <Upload className=\"w-6 h-6 mx-auto mb-2 text-gray-400\" />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Click to upload logo</span>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={handleLogoUpload}\n                      className=\"hidden\"\n                      id=\"logo-upload\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Upload Signature\n                  </label>\n                  <div className=\"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-xl p-4 text-center cursor-pointer hover:border-blue-500 transition-colors\">\n                    <Upload className=\"w-6 h-6 mx-auto mb-2 text-gray-400\" />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Click to upload signature</span>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={handleSignatureUpload}\n                      className=\"hidden\"\n                      id=\"signature-upload\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Items Section */}\n              <h3 className=\"font-semibold text-gray-900 dark:text-white mt-6 mb-4\">Items & Services</h3>\n              \n              <div className=\"space-y-4\">\n                {invoiceData.items.map((item, index) => (\n                  <div key={index} className=\"grid grid-cols-12 gap-2 items-center p-3 border border-gray-200 dark:border-gray-600 rounded-lg\">\n                    <div className=\"col-span-5\">\n                      <input\n                        type=\"text\"\n                        value={item.description}\n                        onChange={(e) => handleItemChange(index, 'description', e.target.value)}\n                        placeholder=\"Item description\"\n                        className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n                      />\n                    </div>\n                    <div className=\"col-span-2\">\n                      <input\n                        type=\"text\"\n                        value={item.hsn}\n                        onChange={(e) => handleItemChange(index, 'hsn', e.target.value)}\n                        placeholder=\"HSN\"\n                        className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n                      />\n                    </div>\n                    <div className=\"col-span-2\">\n                      <input\n                        type=\"number\"\n                        value={item.quantity}\n                        onChange={(e) => handleItemChange(index, 'quantity', e.target.value)}\n                        className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n                      />\n                    </div>\n                    <div className=\"col-span-2\">\n                      <input\n                        type=\"number\"\n                        value={item.rate}\n                        onChange={(e) => handleItemChange(index, 'rate', e.target.value)}\n                        className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n                      />\n                    </div>\n                    <div className=\"col-span-1\">\n                      <button\n                        onClick={() => removeItem(index)}\n                        className=\"w-full p-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors text-sm\"\n                      >\n                        ×\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              <button\n                onClick={addItem}\n                className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\n              >\n                Add Item\n              </button>\n\n              {/* Actions */}\n              <div className=\"flex gap-4 mt-6\">\n                <button\n                  onClick={downloadPDF}\n                  className=\"flex-1 flex items-center justify-center gap-2 px-4 py-3 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  <Download className=\"w-4 h-4\" />\n                  Download PDF\n                </button>\n                <button\n                  onClick={() => window.print()}\n                  className=\"flex-1 flex items-center justify-center gap-2 px-4 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\n                >\n                  <Printer className=\"w-4 h-4\" />\n                  Print\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Preview Panel */}\n          <div className=\"space-y-6\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6\">\n              <h2 className=\"font-semibold text-gray-900 dark:text-white mb-4\">A4 Invoice Preview</h2>\n              \n              <div className=\"preview-container bg-gray-100 p-4 rounded-lg\">\n                <div \n                  ref={invoiceRef}\n                  className=\"a4-invoice bg-white p-8 shadow-lg\"\n                  style={{ width: '210mm', minHeight: '297mm', margin: '0 auto' }}\n                >\n                  {/* Invoice Header */}\n                  <div className=\"invoice-header flex justify-between items-start mb-6 pb-4 border-b-2 border-blue-600\">\n                    <div className=\"company-info\">\n                      {logo && (\n                        <img \n                          src={logo} \n                          alt=\"Company Logo\" \n                          style={{ maxHeight: `${logoSize}px`, marginBottom: '8px' }}\n                        />\n                      )}\n                      <h2 className=\"text-xl font-bold text-blue-600 mb-2\">{invoiceData.companyName}</h2>\n                      <div className=\"text-sm text-gray-600 mb-1\" dangerouslySetInnerHTML={{ \n                        __html: invoiceData.companyAddress.replace(/\\n/g, '<br>') \n                      }} />\n                      <div className=\"text-sm text-gray-600\">Phone: {invoiceData.companyPhone} | Email: {invoiceData.companyEmail}</div>\n                      <div className=\"text-sm text-gray-600\">GSTIN: {invoiceData.companyGST}</div>\n                    </div>\n                    <div className=\"invoice-title text-2xl font-bold text-blue-600\">INVOICE</div>\n                  </div>\n\n                  {/* Client Details */}\n                  <div className=\"client-details grid grid-cols-2 gap-4 mb-6\">\n                    <div className=\"client-box border border-gray-300 rounded p-3 bg-gray-50\">\n                      <h3 className=\"bg-blue-600 text-white p-2 -m-3 mb-2 rounded-t font-semibold\">Consignee (Ship to)</h3>\n                      <div className=\"font-semibold mb-1\">{invoiceData.consigneeName}</div>\n                      <div className=\"text-sm mb-1\" dangerouslySetInnerHTML={{ \n                        __html: invoiceData.consigneeAddress.replace(/\\n/g, '<br>') \n                      }} />\n                      <div className=\"text-sm\">GSTIN: {invoiceData.consigneeGST}</div>\n                    </div>\n                    <div className=\"client-box border border-gray-300 rounded p-3 bg-gray-50\">\n                      <h3 className=\"bg-blue-600 text-white p-2 -m-3 mb-2 rounded-t font-semibold\">Buyer (Bill to)</h3>\n                      <div className=\"font-semibold mb-1\">{invoiceData.buyerName}</div>\n                      <div className=\"text-sm mb-1\" dangerouslySetInnerHTML={{ \n                        __html: invoiceData.buyerAddress.replace(/\\n/g, '<br>') \n                      }} />\n                      <div className=\"text-sm\">GSTIN: {invoiceData.buyerGST}</div>\n                    </div>\n                  </div>\n\n                  {/* Invoice Meta */}\n                  <div className=\"invoice-meta mb-6\">\n                    <table className=\"w-full border-collapse border border-gray-300 text-sm\">\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-gray-300 p-2 font-semibold bg-gray-50 w-1/4\">Invoice No.</td>\n                          <td className=\"border border-gray-300 p-2 w-1/4\">{invoiceData.invoiceNumber}</td>\n                          <td className=\"border border-gray-300 p-2 font-semibold bg-gray-50 w-1/4\">Delivery Note</td>\n                          <td className=\"border border-gray-300 p-2 w-1/4\">{invoiceData.deliveryNote}</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-gray-300 p-2 font-semibold bg-gray-50\">Invoice Date</td>\n                          <td className=\"border border-gray-300 p-2\">{formatDate(invoiceData.invoiceDate)}</td>\n                          <td className=\"border border-gray-300 p-2 font-semibold bg-gray-50\">Buyer's Order No.</td>\n                          <td className=\"border border-gray-300 p-2\">{invoiceData.buyerOrderNo}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n\n                  {/* Items Table */}\n                  <div className=\"items-table mb-6\">\n                    <table className=\"w-full border-collapse border border-gray-300 text-sm\">\n                      <thead>\n                        <tr className=\"bg-blue-600 text-white\">\n                          <th className=\"border border-gray-300 p-2 text-left\">#</th>\n                          <th className=\"border border-gray-300 p-2 text-left\">Description</th>\n                          <th className=\"border border-gray-300 p-2 text-left\">HSN/SAC</th>\n                          <th className=\"border border-gray-300 p-2 text-left\">Qty</th>\n                          <th className=\"border border-gray-300 p-2 text-left\">Rate (₹)</th>\n                          <th className=\"border border-gray-300 p-2 text-left\">Amount (₹)</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {invoiceData.items.map((item, index) => (\n                          <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : ''}>\n                            <td className=\"border border-gray-300 p-2\">{index + 1}</td>\n                            <td className=\"border border-gray-300 p-2\">{item.description}</td>\n                            <td className=\"border border-gray-300 p-2\">{item.hsn}</td>\n                            <td className=\"border border-gray-300 p-2\">{item.quantity}</td>\n                            <td className=\"border border-gray-300 p-2\">₹ {formatNumber(item.rate)}</td>\n                            <td className=\"border border-gray-300 p-2\">₹ {formatNumber(item.quantity * item.rate)}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n\n                  {/* Totals */}\n                  <div className=\"totals-section mb-4\">\n                    <table className=\"ml-auto w-1/2 border-collapse border border-gray-300 text-sm\">\n                      <tbody>\n                        <tr>\n                          <td className=\"border border-gray-300 p-2 font-semibold bg-gray-50\">Subtotal:</td>\n                          <td className=\"border border-gray-300 p-2\">₹ {formatNumber(subtotal)}</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-gray-300 p-2 font-semibold bg-gray-50\">CGST @ {invoiceData.cgstRate}%:</td>\n                          <td className=\"border border-gray-300 p-2\">₹ {formatNumber(cgstAmount)}</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-gray-300 p-2 font-semibold bg-gray-50\">SGST @ {invoiceData.sgstRate}%:</td>\n                          <td className=\"border border-gray-300 p-2\">₹ {formatNumber(sgstAmount)}</td>\n                        </tr>\n                        <tr>\n                          <td className=\"border border-gray-300 p-2 font-semibold bg-blue-600 text-white\">Total Amount:</td>\n                          <td className=\"border border-gray-300 p-2 font-semibold bg-blue-600 text-white\">₹ {formatNumber(totalAmount)}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n\n                  {/* Amount in Words */}\n                  <div className=\"amount-words mb-6 p-3 bg-gray-50 border border-gray-300 rounded text-sm\">\n                    <strong>Amount in Words:</strong> {numberToWords(totalAmount)}\n                  </div>\n\n                  {/* Footer */}\n                  <div className=\"footer-section flex justify-between items-start pt-4 border-t border-gray-300\">\n                    <div className=\"declaration flex-1 pr-4\">\n                      <p className=\"text-sm text-gray-600 mb-2\">\n                        <strong>Declaration:</strong> We certify that this invoice shows the actual price of the goods described and that all particulars are true and correct.\n                      </p>\n                      <p className=\"text-xs text-gray-500 italic\">\n                        <strong>Note:</strong> This is a computer-generated invoice, no signature required.\n                      </p>\n                    </div>\n                    <div className=\"signature text-center\">\n                      {signature && (\n                        <img \n                          src={signature} \n                          alt=\"Signature\" \n                          className=\"mx-auto mb-2\"\n                          style={{ maxHeight: '35px' }}\n                        />\n                      )}\n                      <p className=\"font-semibold text-sm\">For {invoiceData.companyName}</p>\n                      <div className=\"border-t border-gray-400 mt-6 pt-1 w-32 mx-auto\"></div>\n                      <p className=\"text-sm mt-1\">Authorized Signatory</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Logo Controls */}\n            {logo && (\n              <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6\">\n                <h3 className=\"font-semibold text-gray-900 dark:text-white mb-4\">Logo Controls</h3>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                      Logo Size: {logoSize}px\n                    </label>\n                    <input\n                      type=\"range\"\n                      min=\"20\"\n                      max=\"80\"\n                      value={logoSize}\n                      onChange={(e) => setLogoSize(parseInt(e.target.value))}\n                      className=\"w-full\"\n                    />\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <button\n                      onClick={() => setLogoSize(30)}\n                      className=\"flex-1 px-3 py-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50\"\n                    >\n                      Small\n                    </button>\n                    <button\n                      onClick={() => setLogoSize(45)}\n                      className=\"flex-1 px-3 py-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50\"\n                    >\n                      Medium\n                    </button>\n                    <button\n                      onClick={() => setLogoSize(60)}\n                      className=\"flex-1 px-3 py-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50\"\n                    >\n                      Large\n                    </button>\n                  </div>\n                  <button\n                    onClick={() => setLogo(null)}\n                    className=\"w-full px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\"\n                  >\n                    Remove Logo\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Notification */}\n      {notification && (\n        <div className=\"fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50\">\n          {notification}\n        </div>\n      )}\n    </motion.div>\n  );\n};\n\nexport default InvoiceGenerator;"],"file":"assets/InvoiceGenerator-1736dde8.js"}